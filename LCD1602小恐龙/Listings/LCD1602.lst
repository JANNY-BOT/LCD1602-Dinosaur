C51 COMPILER V9.54   LCD1602                                                               06/29/2022 18:33:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -CD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <INTRINS.H>
   3          
   4          sbit LCD_EN=P2^7;
   5          sbit LCD_RS=P2^6;
   6          sbit LCD_WR=P2^5;
   7          #define LCD_DataPort P0
   8          
   9          void LCD_Delay()    //@11.0592MHz   1ms
  10          {
  11   1        unsigned char i, j;
  12   1      
  13   1        _nop_();
  14   1        i = 2;
  15   1        j = 199;
  16   1        do
  17   1        {
  18   2          while (--j);
  19   2        } while (--i);
  20   1      }
  21          
  22          /**
  23            *@brief   写命令
  24            *@param   Command，命令
  25            *@retval  无 
  26          */
  27          void LCD_WriteCommand(unsigned char Command)
  28          {
  29   1        LCD_RS=0;// 数据/命令选择段低电平
  30   1        LCD_WR=0;
  31   1        LCD_DataPort=Command;
  32   1        LCD_EN=1;
  33   1        LCD_Delay();
  34   1        LCD_EN=0;
  35   1        LCD_Delay();
  36   1      }
  37          
  38          /**
  39            *@brief   写数据
  40            *@param   Data，数据
  41            *@retval  无 
  42          */
  43          void LCD_WriteData(unsigned char Data)
  44          {
  45   1        LCD_RS=1;// 数据/命令选择段高电平
  46   1        LCD_WR=0;
  47   1        LCD_DataPort=Data;
  48   1        LCD_EN=1;
  49   1        LCD_Delay();
  50   1        LCD_EN=0;
  51   1        LCD_Delay();
  52   1      }
  53          
  54          /**
C51 COMPILER V9.54   LCD1602                                                               06/29/2022 18:33:44 PAGE 2   

  55            *@brief   LCD初始化
  56            *@param   无
  57            *@retval  无 
  58          */
  59          void LCD_Init()
  60          {
  61   1        LCD_WriteCommand(0x38);//8位数据接口，两行显示，5*7点阵
  62   1        LCD_WriteCommand(0x0c);//显示开，光标关，闪烁关
  63   1        LCD_WriteCommand(0x06);//数据读写操作后，光标自动加一，画面不动
  64   1        LCD_WriteCommand(0x01);//清屏
  65   1      }
  66          
  67          /**
  68            *@brief   光标位置
  69            *@param   Line，行
  70            *@param   Column，列  
  71            *@retval  无 
  72          */
  73          void LCD_SetAC(unsigned char Line,unsigned char Column)
  74          {
  75   1          if(Line==1)
  76   1        {
  77   2          LCD_WriteCommand(0x80|(Column-1));
  78   2        }
  79   1        else
  80   1        {
  81   2          LCD_WriteCommand(0x80|(Column-1)+0x40);
  82   2        }
  83   1      }
  84          
  85          /**
  86            *@brief   LCD显示字符
  87            *@param   Line，行
  88            *@param   Column，列
  89            *@param   Data，显示字符
  90            *@retval  无 
  91          */
  92          void LCD_ShowChar(unsigned char Line,unsigned char Column,unsigned char Data)
  93          {
  94   1        LCD_SetAC(Line,Column);
  95   1        LCD_WriteData(Data);
  96   1      }
  97          
  98          /**
  99            *@brief   LCD显示字符串
 100            *@param   Line，行
 101            *@param   Column，列
 102            *@param   Data[]，显示字符串
 103            *@retval  无 
 104          */
 105          void LCD_ShowString(unsigned char Line,unsigned char Column,unsigned char Data[])
 106          {
 107   1        unsigned char i;
 108   1        LCD_SetAC(Line,Column);
 109   1        for(i=0;Data[i]!='\0';i++)
 110   1        {
 111   2            LCD_WriteData(Data[i]);
 112   2        }
 113   1      }
 114          
 115          /**
 116            *@brief   LCD乘方函数
C51 COMPILER V9.54   LCD1602                                                               06/29/2022 18:33:44 PAGE 3   

 117            *@param   x，底数
 118            *@param   y，次方
 119            *@retval  result，结果 
 120          */
 121          int LCD_Pow(int x, int y)
 122          {
 123   1        unsigned char i;
 124   1        int result=1;
 125   1        
 126   1        for(i=0;i<y;i++)
 127   1        {
 128   2          result*=x;
 129   2        }
 130   1        return result;
 131   1      }
 132          
 133          /**
 134            *@brief   LCD显示无符号数字
 135            *@param   Line，行
 136            *@param   Column，列
 137            *@param   Lenth,长度
 138            *@param   Data，显示数字 
 139            *@retval  无 
 140            *@notice  89c516rd+为16位，每次运算数据最大不超过65535
 141          */
 142          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned char Lenth,unsigned int Data)
 143          {
 144   1        unsigned char i;
 145   1        LCD_SetAC(Line,Column);
 146   1        for(i=1;i<=Lenth;i++)
 147   1        {
 148   2          LCD_WriteData(0x30+Data/LCD_Pow(10,(Lenth-i))%10);
 149   2        }
 150   1      }
 151          
 152          /**
 153            *@brief   LCD显示符号数字
 154            *@param   Line，行
 155            *@param   Column，列
 156            *@param   Lenth,长度
 157            *@param   Data，显示数字 
 158          */
 159          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,unsigned char Lenth,int Data)
 160          {
 161   1        unsigned char i;
 162   1        unsigned int DataShow;
 163   1        LCD_SetAC(Line,Column);
 164   1        if(Data>=0)
 165   1        {
 166   2          LCD_WriteData('+');
 167   2          DataShow=Data;
 168   2        }
 169   1        else
 170   1        {
 171   2          LCD_WriteData('-');
 172   2          DataShow=-Data;   
 173   2        }
 174   1        for(i=1;i<=Lenth;i++)
 175   1        {
 176   2          LCD_WriteData(0x30+DataShow/LCD_Pow(10,(Lenth-i))%10);
 177   2        } 
 178   1      }
C51 COMPILER V9.54   LCD1602                                                               06/29/2022 18:33:44 PAGE 4   

 179          
 180          /**
 181            *@brief   LCD显示十六进制数字
 182            *@param   Line，行
 183            *@param   Column，列
 184            *@param   Lenth,长度
 185            *@param   Data，显示数字 
 186            *@retval  无 
 187          */
 188          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned char Lenth,unsigned int Data)
 189          {
 190   1        unsigned char i;
 191   1        unsigned char flag;//判断是否大于等于10
 192   1        LCD_SetAC(Line,Column);
 193   1        for(i=1;i<=Lenth;i++)
 194   1        {
 195   2          flag=Data/LCD_Pow(16,(Lenth-i))%16;
 196   2          if(flag<10)
 197   2          {
 198   3            LCD_WriteData(0x30+flag);     
 199   3          }
 200   2          else
 201   2          {
 202   3            LCD_WriteData('A'+flag-10);           
 203   3          }
 204   2        }
 205   1      }
 206          
 207          /**
 208            *@brief   LCD显示二进制数字
 209            *@param   Line，行
 210            *@param   Column，列
 211            *@param   Lenth,长度
 212            *@param   Data，显示数字 
 213            *@retval  无 
 214          */
 215          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned char Lenth,unsigned int Data)
 216          {
 217   1        unsigned char i;
 218   1        LCD_SetAC(Line,Column);
 219   1        for(i=1;i<=Lenth;i++)
 220   1        {
 221   2          LCD_WriteData(0x30+Data/LCD_Pow(2,(Lenth-i))%2);
 222   2        }
 223   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    405    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
